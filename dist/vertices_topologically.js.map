{"version":3,"sources":["webpack:///webpack/universalModuleDefinition?5ca6**","webpack:///webpack/bootstrap e1864f16bde87f058b9b?d244**","webpack:///./src/vertices_topologically.es6.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;sBCpByB,sBAAsB;kBAAtB,sBAAsB;;AAAhC,UAAU,sBAAsB,CAAC,KAAK;iBAChD,OAAO,EACP,OAAO,EAED,KAAK,qGAkBL,GAAG;;;;;AAlBH,UAAK,YAAL,KAAK,CAAC,GAAG;UAEd,CAAC,EAEA,KAAK,+FAIC,OAAO;;;;;AAPlB,gBAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AACd,UAAC,GAAG,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC;;eACxB,CAAC,KAAK,OAAO,CAAC,MAAM,GAAG,CAAC;;;;;AACvB,cAAK,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,OAAO,EAAE;eACpC,IAAI,KAAK,CAAC,WAAW,CAAC,UAAU,CAAC,KAAK,CAAC;;;aAEzC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC;;;;;;;;;qBACE,KAAK,CAAC,UAAU,CAAC,GAAG,CAAC;;;;;;;;;AAAjC,gBAAO;0CACT,KAAK,CAAC,OAAO,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;cAElB,KAAK,CAAC,SAAS,CAAC,GAAG,CAAC;;;;;;gBACjB,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC;;;AAExB,gBAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;;;AAElB,gBAAO,CAAC,GAAG,EAAE,CAAC;;;;;;;;;kBAhBL,KAAK;AAHX,YAAO,GAAG,EAAE;AACZ,YAAO,GAAG,IAAI,GAAG,EAAE;;;;;kBAoBL,KAAK,CAAC,QAAQ,EAAE;;;;;;;;;AAAxB,QAAG;;SACP,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC;;;;;sCACb,KAAK,CAAC,GAAG,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAGnB;;AAAA,EAAC","file":"vertices_topologically.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Graph\"] = factory();\n\telse\n\t\troot[\"Graph\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap e1864f16bde87f058b9b","/**\n * Iterate over all vertices of a graph in topological order.\n * @param graph {Graph} the graph to iterate over;\n *                      if this is called as a method added through\n *                      {@link Graph.plugin}, this argument is skipped\n * @returns {Iterator} an ES6 iterator yielding vertices\n * @example\n * for (var it = vertices_topologically(graph), kv; !(kv = it.next()).done;) {\n *     var key   = kv.value[0],\n *         value = kv.value[1];\n *     // iterates over all vertices of the graph in topological order\n * }\n * @example\n * // in ECMAScript 6, you can use a for..of loop\n * for (let [key, value] of vertices_topologically(graph)) {\n *     // iterates over all vertices of the graph in topological order\n * }\n */\nexport default function *vertices_topologically(graph) {\n\tlet visited = []; // stack\n\tlet handled = new Set();\n\n\tfunction *visit(key) {\n\t\tvisited.push(key);\n\t\tlet i = visited.indexOf(key);\n\t\tif (i !== visited.length - 1) {\n\t\t\tlet cycle = visited.slice(i + 1).reverse();\n\t\t\tthrow new graph.constructor.CycleError(cycle);\n\t\t}\n\t\tif (!handled.has(key)) {\n\t\t\tfor (let [nextKey] of graph.verticesTo(key)) {\n\t\t\t\tyield* visit(nextKey);\n\t\t\t}\n\t\t\tif (graph.hasVertex(key)) {\n\t\t\t\tyield graph.vertex(key);\n\t\t\t}\n\t\t\thandled.add(key);\n\t\t}\n\t\tvisited.pop();\n\t}\n\tfor (let [key] of graph.vertices()) {\n\t\tif (!handled.has(key)) {\n\t\t\tyield* visit(key);\n\t\t}\n\t}\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/vertices_topologically.es6.js"],"sourceRoot":""}